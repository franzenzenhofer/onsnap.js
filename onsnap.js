// Generated by CoffeeScript 1.6.2
(function() {
  var THRESHOLD, TIME_UNTIL_LISTEN_AGAIN, gotStream, lookForSnap, sum, throwSnapEvent, watchLoop, _l_i_s_t_e_n_;

  THRESHOLD = 50000;

  TIME_UNTIL_LISTEN_AGAIN = 1000;

  _l_i_s_t_e_n_ = true;

  sum = function(ar) {
    var n, s;

    s = 0;
    n = ar.length;
    while (n--) {
      s = s + ar[n];
    }
    return s;
  };

  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;

  window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;

  throwSnapEvent = function() {
    var SnapEvent;

    SnapEvent = new CustomEvent("snap", {
      bubbles: true,
      cancelable: false
    });
    return window.document.body.dispatchEvent(SnapEvent);
  };

  gotStream = function(stream) {
    var analyser, context, source;

    context = new AudioContext();
    analyser = context.createAnalyser();
    source = context.createMediaStreamSource(stream);
    source.connect(analyser);
    return watchLoop(analyser);
  };

  watchLoop = function(analyser) {
    var freqByteData, loop_id;

    loop_id = window.webkitRequestAnimationFrame((function() {
      return watchLoop(analyser);
    }));
    freqByteData = new Uint8Array(analyser.frequencyBinCount);
    analyser.getByteFrequencyData(freqByteData);
    if (_l_i_s_t_e_n_) {
      return lookForSnap(freqByteData);
    }
  };

  lookForSnap = function(freqData) {
    var fsum;

    fsum = sum(freqData);
    if (fsum > THRESHOLD) {
      throwSnapEvent();
      _l_i_s_t_e_n_ = false;
      return window.setTimeout((function() {
        return _l_i_s_t_e_n_ = true;
      }), TIME_UNTIL_LISTEN_AGAIN);
    }
  };

  navigator.getUserMedia({
    audio: true
  }, gotStream, (function() {}));

}).call(this);
